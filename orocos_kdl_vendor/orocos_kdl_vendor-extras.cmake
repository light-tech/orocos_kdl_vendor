# Copyright 2022 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Get package location hint from environment variable (if any)
if(NOT orocos_kdl_ROOT_DIR AND DEFINED ENV{orocos_kdl_ROOT_DIR})
    set(orocos_kdl_ROOT_DIR "$ENV{orocos_kdl_ROOT_DIR}" CACHE PATH
            "orocos_kdl base directory location (optional, used for nonstandard installation paths)")
endif()

# Search path for nonstandard package locations
if(orocos_kdl_ROOT_DIR)
    set(orocos_kdl_INCLUDE_PATH PATHS "${orocos_kdl_ROOT_DIR}/include" NO_DEFAULT_PATH)
    set(orocos_kdl_LIBRARY_PATH PATHS "${orocos_kdl_ROOT_DIR}/lib"     NO_DEFAULT_PATH)
else()
    set(orocos_kdl_INCLUDE_PATH "")
    set(orocos_kdl_LIBRARY_PATH "")
endif()

# Find headers and libraries
find_path(orocos_kdl_INCLUDE_DIR NAMES kdl.hpp PATH_SUFFIXES "kdl" ${orocos_kdl_INCLUDE_PATH})
find_library(orocos_kdl_LIBRARY NAMES orocos-kdl PATH_SUFFIXES "orocos_kdl" ${orocos_kdl_LIBRARY_PATH})

mark_as_advanced(orocos_kdl_INCLUDE_DIR orocos_kdl_LIBRARY)

# Output variables generation
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(orocos_kdl DEFAULT_MSG orocos_kdl_LIBRARY orocos_kdl_INCLUDE_DIR)

set(orocos_kdl_FOUND ${OROCOS_KDL_FOUND}) # Enforce case-correctness: Set appropriately cased variable...
unset(OROCOS_KDL_FOUND) # ...and unset uppercase variable generated by find_package_handle_standard_args

if(orocos_kdl_FOUND)
    find_package(Eigen3 REQUIRED)
    set(orocos_kdl_INCLUDE_DIRS ${orocos_kdl_INCLUDE_DIR})
    set(orocos_kdl_LIBRARIES ${orocos_kdl_LIBRARY})

    if(NOT TARGET orocos_kdl::orocos_kdl)
        add_library(orocos_kdl::orocos_kdl UNKNOWN IMPORTED)
        set_property(TARGET orocos_kdl::orocos_kdl PROPERTY IMPORTED_LOCATION ${orocos_kdl_LIBRARY})
        set_property(TARGET orocos_kdl::orocos_kdl PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${orocos_kdl_INCLUDE_DIR})
        set_property(TARGET orocos_kdl::orocos_kdl PROPERTY INTERFACE_LINK_LIBRARIES Eigen3::Eigen)
    endif()
    list(APPEND orocos_kdl_TARGETS orocos_kdl::orocos_kdl)
elseif(orocos_kdl_FIND_REQUIRED)
    message(FATAL_ERROR "Unable to find orocos_kdl")
endif()
